<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="case_logo_type_48x184" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L7y8/A+4F90FVPyzAgAAAABJRU5ErkJggg==
</value>
  </data>
</root>